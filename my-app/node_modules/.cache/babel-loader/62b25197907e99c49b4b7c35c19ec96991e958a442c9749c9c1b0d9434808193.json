{"ast":null,"code":"var _jsxFileName = \"/Users/alexmirran/Documents/GitHub/Web3StorageUpload/my-app/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport DragAndDrop from './DragAndDrop';\nimport { getStorageClient } from './Web3Client';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('Not started');\n  const [cids, setCids] = useState(() => {\n    // Try to load the cids array from localStorage\n    const savedCids = localStorage.getItem('cids');\n    return savedCids ? JSON.parse(savedCids) : [];\n  });\n  useEffect(() => {\n    // When the cids array changes, save it to localStorage\n    localStorage.setItem('cids', JSON.stringify(cids));\n  }, [cids]);\n  async function uploadFile() {\n    setUploadStatus('Uploading...');\n    const client = getStorageClient();\n    const cid = await client.put([file]);\n    console.log('Uploaded:', cid);\n    setUploadStatus('Uploaded');\n    setCids([...cids, cid]);\n  }\n\n  // The rest of your component...\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DragAndDrop, {\n      setFile: setFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected file: \", file.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-box ${uploadStatus === 'Uploaded' ? 'uploaded' : 'not-uploaded'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      onClick: uploadFile,\n      children: \"Upload to IPFS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"cid-list\",\n      children: cids.map((cid, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://dweb.link/ipfs/${cid}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: cid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LkXkprfIN0q/XqH826UzUvK5brY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DragAndDrop","getStorageClient","jsxDEV","_jsxDEV","App","_s","file","setFile","uploadStatus","setUploadStatus","cids","setCids","savedCids","localStorage","getItem","JSON","parse","setItem","stringify","uploadFile","client","cid","put","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","map","index","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/alexmirran/Documents/GitHub/Web3StorageUpload/my-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport DragAndDrop from './DragAndDrop';\nimport { getStorageClient } from './Web3Client';\nimport './styles.css';\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('Not started');\n  const [cids, setCids] = useState(() => {\n    // Try to load the cids array from localStorage\n    const savedCids = localStorage.getItem('cids');\n    return savedCids ? JSON.parse(savedCids) : [];\n  });\n\n  useEffect(() => {\n    // When the cids array changes, save it to localStorage\n    localStorage.setItem('cids', JSON.stringify(cids));\n  }, [cids]);\n\n  async function uploadFile() {\n    setUploadStatus('Uploading...');\n    const client = getStorageClient();\n    const cid = await client.put([file]);\n    console.log('Uploaded:', cid);\n    setUploadStatus('Uploaded');\n    setCids([...cids, cid]);\n  }\n\n  // The rest of your component...\n  return (\n    <div className=\"App\">\n      <DragAndDrop setFile={setFile} />\n      {file && (\n        <div className=\"file-info\">\n          <p>Selected file: {file.name}</p>\n          <div className={`status-box ${uploadStatus === 'Uploaded' ? 'uploaded' : 'not-uploaded'}`} />\n        </div>\n      )}\n      <button className=\"upload-button\" onClick={uploadFile}>\n        Upload to IPFS\n      </button>\n      <ul className=\"cid-list\">\n        {cids.map((cid, index) => (\n          <li key={index}>\n            <a href={`https://dweb.link/ipfs/${cid}`} target=\"_blank\" rel=\"noopener noreferrer\">\n              {cid}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}